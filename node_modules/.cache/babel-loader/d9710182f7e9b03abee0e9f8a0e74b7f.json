{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aaditipai/Desktop/portfolio-react/src/Components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport Button from 'react-bootstrap/Button'; //Function to render contact me component\n\nfunction Contact() {\n  _s();\n\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    name,\n    email,\n    message\n  } = formState; //validates email.\n\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid); // isValid conditional statement\n\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      //validates whether the input field is empty\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n\n    if (!errorMessage) {\n      setFormState({ ...formState,\n        [e.target.name]: e.target.value\n      });\n    }\n  } //prevent default on submit button click\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  return (\n    /*#__PURE__*/\n    //renders the page\n    _jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contact-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: name,\n              onBlur: handleChange,\n              name: \"name\",\n              className: `name inputField`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              defaultValue: email,\n              name: \"email\",\n              onBlur: handleChange,\n              className: `email inputField`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              defaultValue: message,\n              onBlur: handleChange,\n              rows: \"5\",\n              className: `message inputField`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onSubmit: handleSubmit,\n            className: \"inputField\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Contact, \"I0yt9zdp/r26dwV41mNkyL7KJhw=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/aaditipai/Desktop/portfolio-react/src/Components/Contact/index.js"],"names":["React","useState","validateEmail","Button","Contact","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport Button from 'react-bootstrap/Button';\n\n//Function to render contact me component\nfunction Contact() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const [errorMessage, setErrorMessage] = useState('');\n    const { name, email, message } = formState;\n    //validates email.\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n              \n        }else {\n            //validates whether the input field is empty\n        if (!e.target.value.length) {\n          setErrorMessage(`${e.target.name} is required.`);\n        } else {\n          setErrorMessage('');\n        }\n      }  \n      if (!errorMessage) {\n        setFormState({...formState, [e.target.name]: e.target.value })\n      }\n    }\n    //prevent default on submit button click\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n    return (\n        //renders the page\n        <section>\n          <h1>Contact me</h1>\n          <div className=\"contact\">\n            <form id=\"contact-form\">\n              <div>\n                 <label htmlFor=\"name\">Name:</label>\n                 <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" className={`name inputField`}/>\n             </div>\n             <div>\n                 <label htmlFor=\"email\">Email address:</label>\n                 <input type=\"email\" defaultValue={email} name=\"email\" onBlur={handleChange} className={`email inputField`} />\n             </div>        \n             <div>\n                 <label htmlFor=\"message\">Message:</label>\n                 <textarea name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"5\" className={`message inputField`} />\n             </div>\n             {errorMessage && (\n                 <div>\n                      <p className=\"error-text\">{errorMessage}</p>\n                 </div>\n             )}\n             <Button type=\"submit\" onSubmit={handleSubmit} className=\"inputField\">Submit</Button>\n            </form>\n          </div>\n          \n        </section>\n      )\n\n }\n\n export default Contact;"]},"metadata":{},"sourceType":"module"}